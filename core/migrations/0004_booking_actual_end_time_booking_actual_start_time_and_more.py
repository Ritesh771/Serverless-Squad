# Generated by Django 5.2.7 on 2025-10-12 05:15

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('core', '0003_alter_auditlog_action_pincodeanalytics_businessalert_and_more'),
    ]

    operations = [
        migrations.AddField(
            model_name='booking',
            name='actual_end_time',
            field=models.DateTimeField(blank=True, help_text='When vendor is free for next booking', null=True),
        ),
        migrations.AddField(
            model_name='booking',
            name='actual_start_time',
            field=models.DateTimeField(blank=True, help_text='When vendor should start traveling', null=True),
        ),
        migrations.AddField(
            model_name='booking',
            name='buffer_after_minutes',
            field=models.PositiveIntegerField(default=15, help_text='Buffer time after service'),
        ),
        migrations.AddField(
            model_name='booking',
            name='buffer_before_minutes',
            field=models.PositiveIntegerField(default=15, help_text='Buffer time before service'),
        ),
        migrations.AddField(
            model_name='booking',
            name='estimated_service_duration_minutes',
            field=models.PositiveIntegerField(blank=True, help_text='Predicted service duration', null=True),
        ),
        migrations.AddField(
            model_name='booking',
            name='travel_time_from_location_minutes',
            field=models.PositiveIntegerField(blank=True, help_text='Travel time from customer location', null=True),
        ),
        migrations.AddField(
            model_name='booking',
            name='travel_time_to_location_minutes',
            field=models.PositiveIntegerField(blank=True, help_text='Travel time to customer location', null=True),
        ),
        migrations.CreateModel(
            name='TravelTimeCache',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('from_pincode', models.CharField(db_index=True, max_length=10)),
                ('to_pincode', models.CharField(db_index=True, max_length=10)),
                ('distance_km', models.FloatField(help_text='Distance in kilometers')),
                ('duration_minutes', models.PositiveIntegerField(help_text='Travel time in minutes')),
                ('duration_in_traffic_minutes', models.PositiveIntegerField(blank=True, help_text='Travel time with traffic', null=True)),
                ('calculated_at', models.DateTimeField(auto_now=True)),
                ('google_maps_api_used', models.BooleanField(default=True)),
                ('confidence_score', models.FloatField(default=1.0, help_text='Accuracy confidence 0-1')),
                ('is_expired', models.BooleanField(default=False)),
            ],
            options={
                'ordering': ['-calculated_at'],
                'indexes': [models.Index(fields=['from_pincode', 'to_pincode'], name='core_travel_from_pi_70ad59_idx'), models.Index(fields=['calculated_at'], name='core_travel_calcula_c1b695_idx')],
                'unique_together': {('from_pincode', 'to_pincode')},
            },
        ),
        migrations.CreateModel(
            name='VendorAvailability',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('day_of_week', models.CharField(choices=[('monday', 'Monday'), ('tuesday', 'Tuesday'), ('wednesday', 'Wednesday'), ('thursday', 'Thursday'), ('friday', 'Friday'), ('saturday', 'Saturday'), ('sunday', 'Sunday')], max_length=10)),
                ('start_time', models.TimeField()),
                ('end_time', models.TimeField()),
                ('primary_pincode', models.CharField(help_text="Vendor's primary location", max_length=10)),
                ('service_radius_km', models.PositiveIntegerField(default=25, help_text='Maximum travel distance in km')),
                ('preferred_buffer_minutes', models.PositiveIntegerField(default=30, help_text='Preferred gap between bookings')),
                ('max_travel_time_minutes', models.PositiveIntegerField(default=60, help_text='Maximum acceptable travel time')),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('vendor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='availability_slots', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['vendor', 'day_of_week', 'start_time'],
                'unique_together': {('vendor', 'day_of_week', 'start_time')},
            },
        ),
    ]
