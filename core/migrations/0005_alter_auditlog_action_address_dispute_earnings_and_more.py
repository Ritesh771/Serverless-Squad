# Generated by Django 5.2.7 on 2025-10-12 19:29

import django.core.validators
import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("core", "0004_booking_actual_end_time_booking_actual_start_time_and_more"),
    ]

    operations = [
        migrations.AlterField(
            model_name="auditlog",
            name="action",
            field=models.CharField(
                choices=[
                    ("create", "Create"),
                    ("update", "Update"),
                    ("delete", "Delete"),
                    ("login", "Login"),
                    ("logout", "Logout"),
                    ("signature_request", "Signature Request"),
                    ("signature_sign", "Signature Sign"),
                    ("payment_process", "Payment Process"),
                    ("status_change", "Status Change"),
                    ("cache_clear", "Cache Clear"),
                    ("notification_sent", "Notification Sent"),
                    ("alert_created", "Alert Created"),
                    ("alert_resolved", "Alert Resolved"),
                    ("dispute_created", "Dispute Created"),
                    ("dispute_resolved", "Dispute Resolved"),
                ],
                max_length=30,
            ),
        ),
        migrations.CreateModel(
            name="Address",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "label",
                    models.CharField(
                        help_text="e.g., Home, Office, etc.", max_length=50
                    ),
                ),
                ("address_line", models.TextField()),
                ("pincode", models.CharField(max_length=10)),
                (
                    "lat",
                    models.DecimalField(
                        blank=True, decimal_places=6, max_digits=9, null=True
                    ),
                ),
                (
                    "lng",
                    models.DecimalField(
                        blank=True, decimal_places=6, max_digits=9, null=True
                    ),
                ),
                ("is_default", models.BooleanField(default=False)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="addresses",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["-is_default", "-created_at"],
            },
        ),
        migrations.CreateModel(
            name="Dispute",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("reason", models.CharField(max_length=200)),
                ("description", models.TextField()),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("open", "Open"),
                            ("in_review", "In Review"),
                            ("resolved", "Resolved"),
                            ("rejected", "Rejected"),
                        ],
                        default="open",
                        max_length=20,
                    ),
                ),
                ("evidence_notes", models.TextField(blank=True)),
                ("resolution_notes", models.TextField(blank=True)),
                ("resolved_at", models.DateTimeField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "booking",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="disputes",
                        to="core.booking",
                    ),
                ),
                (
                    "customer",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="disputes",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "evidence_photos",
                    models.ManyToManyField(
                        blank=True, related_name="disputes", to="core.photo"
                    ),
                ),
                (
                    "resolved_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="resolved_disputes",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["-created_at"],
                "indexes": [
                    models.Index(
                        fields=["status", "created_at"],
                        name="core_disput_status_7f9979_idx",
                    ),
                    models.Index(
                        fields=["customer", "created_at"],
                        name="core_disput_custome_21f105_idx",
                    ),
                ],
            },
        ),
        migrations.CreateModel(
            name="Earnings",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("amount", models.DecimalField(decimal_places=2, max_digits=8)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("approved", "Approved"),
                            ("released", "Released"),
                            ("on_hold", "On Hold"),
                        ],
                        default="pending",
                        max_length=20,
                    ),
                ),
                ("remarks", models.TextField(blank=True)),
                ("release_date", models.DateTimeField(blank=True, null=True)),
                ("processed_at", models.DateTimeField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "booking",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="earning",
                        to="core.booking",
                    ),
                ),
                (
                    "processed_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="processed_earnings",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "vendor",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="earnings",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["-created_at"],
                "indexes": [
                    models.Index(
                        fields=["vendor", "status"],
                        name="core_earnin_vendor__dadab9_idx",
                    ),
                    models.Index(
                        fields=["status", "created_at"],
                        name="core_earnin_status_9f23a0_idx",
                    ),
                ],
            },
        ),
        migrations.CreateModel(
            name="PerformanceMetrics",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("total_jobs", models.PositiveIntegerField(default=0)),
                ("completed_jobs", models.PositiveIntegerField(default=0)),
                ("cancelled_jobs", models.PositiveIntegerField(default=0)),
                ("total_ratings", models.PositiveIntegerField(default=0)),
                ("rating_sum", models.PositiveIntegerField(default=0)),
                ("disputes_raised", models.PositiveIntegerField(default=0)),
                ("disputes_against", models.PositiveIntegerField(default=0)),
                ("on_time_completions", models.PositiveIntegerField(default=0)),
                ("total_completions", models.PositiveIntegerField(default=0)),
                ("bonus_points", models.PositiveIntegerField(default=0)),
                (
                    "tier",
                    models.CharField(
                        choices=[
                            ("bronze", "Bronze"),
                            ("silver", "Silver"),
                            ("gold", "Gold"),
                        ],
                        default="bronze",
                        max_length=20,
                    ),
                ),
                ("last_calculated", models.DateTimeField(auto_now=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "vendor",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="performance_metrics",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["-bonus_points"],
                "indexes": [
                    models.Index(
                        fields=["vendor"], name="core_perfor_vendor__812894_idx"
                    ),
                    models.Index(
                        fields=["bonus_points"], name="core_perfor_bonus_p_e68230_idx"
                    ),
                    models.Index(fields=["tier"], name="core_perfor_tier_cd5a71_idx"),
                ],
            },
        ),
        migrations.CreateModel(
            name="VendorApplication",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                ("email", models.EmailField(max_length=254)),
                (
                    "phone",
                    models.CharField(
                        max_length=17,
                        validators=[
                            django.core.validators.RegexValidator(
                                message="Phone number must be entered in format: '+999999999'. Up to 15 digits allowed.",
                                regex="^\\+?1?\\d{9,15}$",
                            )
                        ],
                    ),
                ),
                ("pincode", models.CharField(max_length=10)),
                ("service_category", models.CharField(max_length=50)),
                (
                    "experience",
                    models.PositiveIntegerField(help_text="Years of experience"),
                ),
                (
                    "id_proof",
                    models.CharField(
                        help_text="ID proof document path", max_length=255
                    ),
                ),
                (
                    "address_proof",
                    models.CharField(
                        help_text="Address proof document path", max_length=255
                    ),
                ),
                (
                    "profile_photo",
                    models.CharField(help_text="Profile photo path", max_length=255),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("approved", "Approved"),
                            ("rejected", "Rejected"),
                        ],
                        default="pending",
                        max_length=20,
                    ),
                ),
                (
                    "remarks",
                    models.TextField(
                        blank=True, help_text="Reviewer remarks for rejection"
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("reviewed_at", models.DateTimeField(blank=True, null=True)),
                (
                    "reviewed_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="reviewed_applications",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "vendor_account",
                    models.OneToOneField(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="vendor_application",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["-created_at"],
                "indexes": [
                    models.Index(
                        fields=["status", "created_at"],
                        name="core_vendor_status_cf55fd_idx",
                    ),
                    models.Index(
                        fields=["pincode"], name="core_vendor_pincode_0e7e97_idx"
                    ),
                ],
            },
        ),
    ]
